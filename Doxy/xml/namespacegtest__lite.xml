<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacegtest__lite" kind="namespace" language="C++">
    <compoundname>gtest_lite</compoundname>
    <innerclass refid="structgtest__lite_1_1_test" prot="public">gtest_lite::Test</innerclass>
    <innerclass refid="classgtest__lite_1_1ostream_redir" prot="public">gtest_lite::ostreamRedir</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegtest__lite_1a819c9a4e5bf13b0f5d81734978336ca0" prot="public" static="yes" mutable="no">
        <type><ref refid="structgtest__lite_1_1_test" kindref="compound">Test</ref> &amp;</type>
        <definition>Test&amp; gtest_lite::test</definition>
        <argsstring></argsstring>
        <name>test</name>
        <initializer>= <ref refid="structgtest__lite_1_1_test_1a532aa4c5e33e41ce8139b9c9098aa6f2" kindref="member">Test::getTest</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A statikus referencia minden fordítási egységben keletkezik, de mindegyik egyetlen példányra fog hivatkozni a singleton minta miatt </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="330" column="13" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegtest__lite_1a73d2ede1d983327aea4fdd5b1d2709ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; gtest_lite::EXPECT_</definition>
        <argsstring>(T1 exp, T2 act, bool(*pred)(T1, T2), const char *file, int line, const char *expr, const char *lhs=&quot;elvart&quot;, const char *rhs=&quot;aktual&quot;)</argsstring>
        <name>EXPECT_</name>
        <param>
          <type>T1</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>act</declname>
        </param>
        <param>
          <type>bool(*)(T1, T2)</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
          <defval>&quot;elvart&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
          <defval>&quot;aktual&quot;</defval>
        </param>
        <briefdescription>
<para>általános sablon a várt értékhez. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="334" column="14" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a835d542f226b31cf5cd28033303aa7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; gtest_lite::EXPECT_</definition>
        <argsstring>(T1 *exp, T2 *act, bool(*pred)(T1 *, T2 *), const char *file, int line, const char *expr, const char *lhs=&quot;elvart&quot;, const char *rhs=&quot;aktual&quot;)</argsstring>
        <name>EXPECT_</name>
        <param>
          <type>T1 *</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>T2 *</type>
          <declname>act</declname>
        </param>
        <param>
          <type>bool(*)(T1 *, T2 *)</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
          <defval>&quot;elvart&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
          <defval>&quot;aktual&quot;</defval>
        </param>
        <briefdescription>
<para>pointerre specializált sablon a várt értékhez. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="343" column="14" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1aea477921e4c26d2a2806bc3011066270" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; gtest_lite::EXPECTSTR</definition>
        <argsstring>(const char *exp, const char *act, bool(*pred)(const char *, const char *), const char *file, int line, const char *expr, const char *lhs=&quot;elvart&quot;, const char *rhs=&quot;aktual&quot;)</argsstring>
        <name>EXPECTSTR</name>
        <param>
          <type>const char *</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>act</declname>
        </param>
        <param>
          <type>bool(*)(const char *, const char *)</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
          <defval>&quot;elvart&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
          <defval>&quot;aktual&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stringek összehasonlításához. azért nem spec. mert a sima EQ-ra másként kell működnie. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="364" column="14" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a884f0c7c25d80d78a73c759a8fc43a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::eq</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>eq</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>segéd sablonok a relációkhoz. azért nem STL (algorithm), mert csak a függvény lehet, hogy menjen a deduckció </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="397" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a34055f353dabbe4ed9063f1d36af6022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gtest_lite::eqstr</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>eqstr</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="400" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="400" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a50e47b21dec025ed15ef3767e556d038" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gtest_lite::eqstrcase</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>eqstrcase</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="407" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="407" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a2f36af995c570e62f68c148f7393eb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::ne</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>ne</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="420" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a0a34b1bb0d55bc0c6a3e878ec2bcd49f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gtest_lite::nestr</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>nestr</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="423" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="423" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a5cd2ce368021471b16b4814b179c9c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::le</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>le</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="430" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1afb471377c0d2d30aeeaf8912db72f0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::lt</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>lt</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="433" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="433" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1a77c1a7cf1d34c46c1d97ed39b9f06050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::ge</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>ge</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="436" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1aa0100ec9e095a9403a7b70ad4a162fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::gt</definition>
        <argsstring>(T1 a, T2 b)</argsstring>
        <name>gt</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="439" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="namespacegtest__lite_1affbf9748c4e4dec6db137f7c147fee61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gtest_lite::almostEQ</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>almostEQ</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Segédsablon valós számok összehasonlításához Nem bombabiztos, de nekünk most jó lesz Elméleti hátér: <ulink url="http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm">http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="446" column="6" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" bodystart="446" bodyend="459"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespacegtest__lite" kindref="compound">gtest_lite</ref>: a keretrendszer függvényinek és objektumainak névtere </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/gtest_lite.h" line="246" column="1"/>
  </compounddef>
</doxygen>
