<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_memory_8h" kind="file" language="C++">
    <compoundname>Memory.h</compoundname>
    <includes refid="products_8h" local="yes">products.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes refid="memtrace_8h" local="yes">memtrace.h</includes>
    <includedby refid="catalogue_8h" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.h</includedby>
    <includedby refid="_computer_8h" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.h</includedby>
    <includedby refid="main_8cpp" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/main.cpp</includedby>
    <includedby refid="_memory_8cpp" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h</label>
        <link refid="_memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
      </node>
      <node id="5">
        <label>fstream</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>products.h</label>
        <link refid="products_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp</label>
        <link refid="_computer_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp</label>
        <link refid="_memory_8cpp"/>
      </node>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h</label>
        <link refid="_memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.cpp</label>
        <link refid="catalogue_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="2">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.h</label>
        <link refid="catalogue_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.h</label>
        <link refid="_computer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_storage" prot="public">Storage</innerclass>
    <innerclass refid="class_r_a_m" prot="public">RAM</innerclass>
    <innerclass refid="class_h_d_d" prot="public">HDD</innerclass>
    <innerclass refid="class_s_s_d" prot="public">SSD</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" prot="public" static="no" strong="no">
        <type></type>
        <name>ByteUnit</name>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a78385304170d4b6010ca2148a3bd1d8f" prot="public">
          <name>bit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85aac8d937b2a0f498686fab54c32371bc6" prot="public">
          <name>byte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a148b886ddf947ee4ba7f55255c1d13dc" prot="public">
          <name>kilobyte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a4f77e907dbf1167b4b4aec22560f8004" prot="public">
          <name>megabyte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365" prot="public">
          <name>gigabyte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a2de85dd4694e7b66be249fb2215e9174" prot="public">
          <name>terabyte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator for multiples of byte </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="12" column="1" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" prot="public" static="no" strong="no">
        <type></type>
        <name>MemoryType</name>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01af5ba4f87a7fc21200aea1f42dd3eb3b4" prot="public">
          <name>DDR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01aa347f76e7f79be0c69e5dac56fd3693e" prot="public">
          <name>DDR2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a9ec4e4d3a3cfab8cb937eac76ff0a342" prot="public">
          <name>DDR3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01ab11070487ce800d77428c98203b5de5f" prot="public">
          <name>DDR4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a669b7d0a3da877b30757f72000daf96c" prot="public">
          <name>DDR5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a4f33648364f484c1b99e23b96ffe0135" prot="public">
          <name>SO_DIMM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a27d317a975fcfe8eb232d69e8c88c554" prot="public">
          <name>SO_DIMM2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator for <ref refid="class_r_a_m" kindref="compound">RAM</ref> types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="41" column="1" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, Storage &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_storage" kindref="compound">Storage</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="119" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp" bodystart="145" bodyend="158" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" declline="119" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_memory_8h_1a5d3c36cdedfc649838c7542f2d8d8b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, RAM &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_r_a_m" kindref="compound">RAM</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="120" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp" bodystart="173" bodyend="194" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" declline="120" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_memory_8h_1a3bcab9104df1767d74204644ebd078bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, HDD &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_h_d_d" kindref="compound">HDD</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="121" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp" bodystart="225" bodyend="237" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" declline="121" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="_memory_8h_1a97ebca926dc01a99103e15b705c29db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, SSD &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_s_s_d" kindref="compound">SSD</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" line="122" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.cpp" bodystart="202" bodyend="217" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h" declline="122" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="products_8h" kindref="compound">products.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a78385304170d4b6010ca2148a3bd1d8f" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref>{<ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a78385304170d4b6010ca2148a3bd1d8f" kindref="member">bit</ref>,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85aac8d937b2a0f498686fab54c32371bc6" kindref="member">byte</ref>,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a148b886ddf947ee4ba7f55255c1d13dc" kindref="member">kilobyte</ref>,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a4f77e907dbf1167b4b4aec22560f8004" kindref="member">megabyte</ref>,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365" kindref="member">gigabyte</ref>,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85a2de85dd4694e7b66be249fb2215e9174" kindref="member">terabyte</ref>};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_storage" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_storage" kindref="compound">Storage</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_product" kindref="compound">Product</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="class_storage_1aae754660623b8e0e5046b967cb4cdb73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_storage_1aae754660623b8e0e5046b967cb4cdb73" kindref="member">capacity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="class_storage_1a58275af4fc94f89edd8af0721aea467e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/><ref refid="class_storage_1a58275af4fc94f89edd8af0721aea467e" kindref="member">notation</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_storage_1aa557b155d438649718b658971c097859" kindref="member">Storage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_storage_1aa557b155d438649718b658971c097859" kindref="member">Storage</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>1,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu<sp/>=<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365" kindref="member">ByteUnit::gigabyte</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_storage_1aa557b155d438649718b658971c097859" kindref="member">Storage</ref>(std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_product_1abb2572df7a832a509944905603ba5e4f" kindref="member">price</ref>,<sp/>std::string<sp/>descript,<sp/>std::string<sp/>manuf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_storage_1acdb19059f3115eceb8cb420b18658440" kindref="member">getCapacity</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/><ref refid="class_storage_1af6dc4a84e1566ab8103623214eee2671" kindref="member">getSizeType</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_storage_1a3836c9fff79b96e8c87ab8a5976d89f8" kindref="member">getNotation</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_storage_1a598d2e8f3fcd8caf5d3042ddecd4896e" kindref="member">serializeObj</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_1a73df5f67fd76f334e3511b2850882974" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_storage_1aded6acc644aaf0e55749d8e85aed2464" kindref="member">operator==</ref>(<ref refid="class_storage" kindref="compound">Storage</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_storage_1a984a17c1466fcf769a44fcc8aa9abb3a" kindref="member">operator!=</ref>(<ref refid="class_storage" kindref="compound">Storage</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref>*<sp/><ref refid="class_storage_1af7f626e3a0bc9d46c59ef7dd8f57c6c9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01af5ba4f87a7fc21200aea1f42dd3eb3b4" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref>{<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01af5ba4f87a7fc21200aea1f42dd3eb3b4" kindref="member">DDR</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01aa347f76e7f79be0c69e5dac56fd3693e" kindref="member">DDR2</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a9ec4e4d3a3cfab8cb937eac76ff0a342" kindref="member">DDR3</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01ab11070487ce800d77428c98203b5de5f" kindref="member">DDR4</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a669b7d0a3da877b30757f72000daf96c" kindref="member">DDR5</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a4f33648364f484c1b99e23b96ffe0135" kindref="member">SO_DIMM</ref>,<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01a27d317a975fcfe8eb232d69e8c88c554" kindref="member">SO_DIMM2</ref>};</highlight></codeline>
<codeline lineno="46" refid="class_r_a_m" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_r_a_m" kindref="compound">RAM</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref><sp/>{</highlight></codeline>
<codeline lineno="47" refid="class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref><sp/><ref refid="class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8" kindref="member">clockSpeed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10" kindref="member">cl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="class_r_a_m_1a63f119dea231b01f176e14af27e3223f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a63f119dea231b01f176e14af27e3223f" kindref="member">v</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" kindref="member">RAM</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" kindref="member">RAM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" kindref="member">RAM</ref>(<ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref><sp/><ref refid="class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8" kindref="member">clockSpeed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10" kindref="member">cl</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a63f119dea231b01f176e14af27e3223f" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" kindref="member">RAM</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu,<sp/><ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref><sp/><ref refid="class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8" kindref="member">clockSpeed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10" kindref="member">cl</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a63f119dea231b01f176e14af27e3223f" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m_1a25289e9f70eb7de231f869a6032f179b" kindref="member">RAM</ref>(std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_product_1abb2572df7a832a509944905603ba5e4f" kindref="member">price</ref>,<sp/>std::string<sp/>descript,<sp/>std::string<sp/>manuf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu,<sp/><ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref><sp/><ref refid="class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8" kindref="member">clockSpeed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10" kindref="member">cl</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a63f119dea231b01f176e14af27e3223f" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_memory_8h_1a462bfa9dfea81692463ecb192183dd01" kindref="member">MemoryType</ref><sp/><ref refid="class_r_a_m_1ae6dcb0ce5ed7f072b803ed005f22e6ec" kindref="member">getMemType</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1ad7b791e374a00c8462a64beead0bea95" kindref="member">getClockSpeed</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a18b3b49c6522e5ab2b3a403860211d20" kindref="member">getlatency</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1af2b254d13a98ff26768081de811805b9" kindref="member">getVoltage</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_r_a_m_1a15ab2492102ae822e8ea760f9613b543" kindref="member">serializeObj</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_a_m" kindref="compound">RAM</ref>*<sp/><ref refid="class_r_a_m_1a2dbd94dada94130817a298b91023e4c9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a1424aff28af127d0ae7b343c01c1df1d" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a96be3ca8c9f5f22fac889ab506c01580" kindref="member">operator!=</ref>(<ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_a_m_1a70961c90671e81db85f1c8422a01ab73" kindref="member">operator==</ref>(<ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75" refid="class_h_d_d" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_h_d_d" kindref="compound">HDD</ref><sp/>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="class_h_d_d_1a67787ee337d12b5cf93e071263ab9867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a67787ee337d12b5cf93e071263ab9867" kindref="member">rpm</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="class_h_d_d_1a17ac1f17161e721f57c2ce14dfc52485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_1a17ac1f17161e721f57c2ce14dfc52485" kindref="member">HDD</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_1a17ac1f17161e721f57c2ce14dfc52485" kindref="member">HDD</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a67787ee337d12b5cf93e071263ab9867" kindref="member">rpm</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_1a17ac1f17161e721f57c2ce14dfc52485" kindref="member">HDD</ref>(std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_product_1abb2572df7a832a509944905603ba5e4f" kindref="member">price</ref>,<sp/>std::string<sp/><ref refid="class_product_1ab88a1ecb238a74583a920a65f8cbee9c" kindref="member">dscrpt</ref>,<sp/>std::string<sp/><ref refid="class_product_1af3d21858bb34986f54309b877678daa8" kindref="member">manufacturer</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>1,<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu<sp/>=<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365" kindref="member">gigabyte</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a67787ee337d12b5cf93e071263ab9867" kindref="member">rpm</ref><sp/>=<sp/>7200);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_1a17ac1f17161e721f57c2ce14dfc52485" kindref="member">HDD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d" kindref="compound">HDD</ref>&amp;<sp/>hdd);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a324a729fcc87a1ee3ae0a8b0efa68b1b" kindref="member">getRPM</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1ab80de8626bc38aa1d3398121b159717e" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_h_d_d_1ad64f75db764118f6e47eafd5c6bc9bdc" kindref="member">serializeObj</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d" kindref="compound">HDD</ref>*<sp/><ref refid="class_h_d_d_1a434ff76ba146d2e143f2c6803ca73a67" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a141c43f704cac14c45ad5639beeda55f" kindref="member">operator==</ref>(<ref refid="class_h_d_d" kindref="compound">HDD</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_1a2b4889e38aef393aa6fcd83e3ae1b910" kindref="member">operator!=</ref>(<ref refid="class_h_d_d" kindref="compound">HDD</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98" refid="class_s_s_d" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_s_d" kindref="compound">SSD</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref><sp/>{</highlight></codeline>
<codeline lineno="99" refid="class_s_s_d_1a17d090f306498b97db010f96be6ef25d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a17d090f306498b97db010f96be6ef25d" kindref="member">wSpeed</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="class_s_s_d_1a49fb67fecc3e51532c161260a1852099" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a49fb67fecc3e51532c161260a1852099" kindref="member">rSpeed</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="class_s_s_d_1a8de2e51be89fab50489f4411ff99a4b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_d_1a8de2e51be89fab50489f4411ff99a4b9" kindref="member">SSD</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_d_1a8de2e51be89fab50489f4411ff99a4b9" kindref="member">SSD</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a17d090f306498b97db010f96be6ef25d" kindref="member">wSpeed</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a49fb67fecc3e51532c161260a1852099" kindref="member">rSpeed</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_d_1a8de2e51be89fab50489f4411ff99a4b9" kindref="member">SSD</ref>(std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_product_1abb2572df7a832a509944905603ba5e4f" kindref="member">price</ref>,<sp/>std::string<sp/><ref refid="class_product_1ab88a1ecb238a74583a920a65f8cbee9c" kindref="member">dscrpt</ref>,<sp/>std::string<sp/><ref refid="class_product_1af3d21858bb34986f54309b877678daa8" kindref="member">manufacturer</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85" kindref="member">ByteUnit</ref><sp/>bu<sp/>=<sp/><ref refid="_memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365" kindref="member">gigabyte</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a17d090f306498b97db010f96be6ef25d" kindref="member">wSpeed</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a49fb67fecc3e51532c161260a1852099" kindref="member">rSpeed</ref><sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_d_1a8de2e51be89fab50489f4411ff99a4b9" kindref="member">SSD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d" kindref="compound">SSD</ref>&amp;<sp/>ssd);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a309d748d1273262845bad668e797ae73" kindref="member">getReadSpeed</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a16388ad4698bea556b140e2c7e5a6ba7" kindref="member">getWriteSpeed</ref>();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a753647f5a39c66e794efd6fed291795b" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_s_s_d_1a0ed308b29e11e06c4c8b84fcab515c4a" kindref="member">serializeObj</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_d" kindref="compound">SSD</ref>*<sp/><ref refid="class_s_s_d_1adfbc00ab863bca1aff44b3ff233b5255" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1a9211758eb8ccfd3fff4edfc8cfde1fab" kindref="member">operator==</ref>(<ref refid="class_s_s_d" kindref="compound">SSD</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d_1ad4992ef53222777923ae3bdabca7dbc4" kindref="member">operator!=</ref>(<ref refid="class_s_s_d" kindref="compound">SSD</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="_memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_storage" kindref="compound">Storage</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="_memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="_memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_h_d_d" kindref="compound">HDD</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="_memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_s_s_d" kindref="compound">SSD</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h"/>
  </compounddef>
</doxygen>
