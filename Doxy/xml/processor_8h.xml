<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="processor_8h" kind="file" language="C++">
    <compoundname>processor.h</compoundname>
    <includes refid="products_8h" local="yes">products.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes refid="memtrace_8h" local="yes">memtrace.h</includes>
    <includedby refid="catalogue_8h" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.h</includedby>
    <includedby refid="_computer_8h" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.h</includedby>
    <includedby refid="main_8cpp" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/main.cpp</includedby>
    <includedby refid="_motherboard_8cpp" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Motherboard.cpp</includedby>
    <includedby refid="_motherboard_8h" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Motherboard.h</includedby>
    <includedby refid="processor_8cpp" local="yes">C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
      </node>
      <node id="5">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h</label>
        <link refid="processor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>products.h</label>
        <link refid="products_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Motherboard.cpp</label>
        <link refid="_motherboard_8cpp"/>
      </node>
      <node id="6">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp</label>
        <link refid="_computer_8cpp"/>
      </node>
      <node id="3">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.cpp</label>
        <link refid="catalogue_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp</label>
        <link refid="processor_8cpp"/>
      </node>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h</label>
        <link refid="processor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Motherboard.h</label>
        <link refid="_motherboard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/catalogue.h</label>
        <link refid="catalogue_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.h</label>
        <link refid="_computer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_p_u" prot="public">CPU</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" prot="public" static="no" strong="no">
        <type></type>
        <name>socket</name>
        <enumvalue id="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a89f9926b61ea482e780698f79c10fb2a" prot="public">
          <name>AMD_AM4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="processor_8h_1a84edc84c8145e7997b70f9919ce44d68aa619b515b905fe4d497c26de1acb1c3f" prot="public">
          <name>INTEL_1151</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a8ad6b82fecc4b442e1cc1995d57f8f51" prot="public">
          <name>INTEL_1151V2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a10c3bad51f295015492a8d1cc1380674" prot="public">
          <name>INTEL_1200</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enum class for the socket types Only for current desktop CPUs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" line="11" column="1" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" bodystart="11" bodyend="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="processor_8h_1a7b671311d36faa1acd74987a04b16f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;is, socket &amp;s)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" line="47" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" bodystart="41" bodyend="46" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" declline="47" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="processor_8h_1a9b99200e1f81123f911d5e581994dddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, CPU &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_c_p_u" kindref="compound">CPU</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>overloaded enum for socket </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" line="48" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" bodystart="48" bodyend="81" declfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h" declline="48" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PROCESSOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROCESSOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="products_8h" kindref="compound">products.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a89f9926b61ea482e780698f79c10fb2a" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref>{<ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a89f9926b61ea482e780698f79c10fb2a" kindref="member">AMD_AM4</ref>,<ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68aa619b515b905fe4d497c26de1acb1c3f" kindref="member">INTEL_1151</ref>,<ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a8ad6b82fecc4b442e1cc1995d57f8f51" kindref="member">INTEL_1151V2</ref>,<ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a10c3bad51f295015492a8d1cc1380674" kindref="member">INTEL_1200</ref>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_c_p_u" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_p_u" kindref="compound">CPU</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_product" kindref="compound">Product</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="class_c_p_u_1acf0ec240e61c72c6252a2f8e7b339189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_p_u_1acf0ec240e61c72c6252a2f8e7b339189" kindref="member">genName</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15" refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" kindref="member">tdp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16" refid="class_c_p_u_1a1f1bb470721f49e48139e46bbea9f109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/><ref refid="class_c_p_u_1a1f1bb470721f49e48139e46bbea9f109" kindref="member">socketType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="class_c_p_u_1a5b9fd4e0c27dcff1bcb33fbca6da2a6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a5b9fd4e0c27dcff1bcb33fbca6da2a6c" kindref="member">baseClock</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="class_c_p_u_1ab0af78c0a115e6c8659b43332439f36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1ab0af78c0a115e6c8659b43332439f36e" kindref="member">coreCount</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="class_c_p_u_1a19e584d567f61b968f2f5e09c86abc4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a19e584d567f61b968f2f5e09c86abc4c" kindref="member">threadCount</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="class_c_p_u_1a4ad29b59532a1c456a1aec62437aa5cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a4ad29b59532a1c456a1aec62437aa5cd" kindref="member">L2_cache</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="class_c_p_u_1a3de211accd8ac7dc87cfecb446c4ebf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a3de211accd8ac7dc87cfecb446c4ebf9" kindref="member">iVGA</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU</ref>(std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" kindref="member">tdp</ref>,<sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clock,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vga);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU</ref>(std::string<sp/>pName,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_product_1abb2572df7a832a509944905603ba5e4f" kindref="member">price</ref>,<sp/>std::string<sp/>manuf,<sp/>std::string<sp/>descript,<sp/>std::string<sp/><ref refid="class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" kindref="member">tdp</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clock,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vga);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>c);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_p_u_1a82acaa1b7d2da4e29f374d5166d42aef" kindref="member">getGenName</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a2c07fd65f7d19ee89ccfbde0e8b4878d" kindref="member">getTDP</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/><ref refid="class_c_p_u_1a70b831ad7cfe74ce44be5d1349620e87" kindref="member">getSocketType</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_p_u_1ad492c4bcbc0fe07eb7bd644be677c87f" kindref="member">getStringSocket</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a4040061f11be42ead23ccca8defd734e" kindref="member">getBaseClock</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a30b19e25587f96ef54b34334dc038e27" kindref="member">getCoreCount</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a6d5058f1c0d00256a861dff8ba9b38fe" kindref="member">getThreadCount</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a2ec3047e90d5989e03337d809988b15a" kindref="member">getCacheSize</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1aa025e57bb42da447da66c8bc8e5d5de2" kindref="member">ivga</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>*<sp/><ref refid="class_c_p_u_1ab4f1ec2a356344187dc6598404012df9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1aa2af36b3447c4e7b4e1f25f699a06824" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_p_u_1ae3a32cc02d31f2193bc53ad052fba3a6" kindref="member">serializeObj</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a9118f119822e1bcef98ba7bb0ab2b8a1" kindref="member">operator==</ref>(<ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a4fdd9268f87165e4dc921e87b09d0060" kindref="member">operator!=</ref>(<ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="processor_8h_1a7b671311d36faa1acd74987a04b16f1f" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>is,<sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref>&amp;<sp/>s);<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="processor_8h_1a7b671311d36faa1acd74987a04b16f1f" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.h"/>
  </compounddef>
</doxygen>
