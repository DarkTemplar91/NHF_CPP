<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="processor_8cpp" kind="file" language="C++">
    <compoundname>processor.cpp</compoundname>
    <includes refid="processor_8h" local="yes">processor.h</includes>
    <includes refid="products_8h" local="yes">products.h</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes refid="memtrace_8h" local="yes">memtrace.h</includes>
    <incdepgraph>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp</label>
        <link refid="processor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>processor.h</label>
        <link refid="processor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>products.h</label>
        <link refid="products_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="processor_8cpp_1a7b671311d36faa1acd74987a04b16f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;is, socket &amp;s)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" line="41" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="processor_8cpp_1a9b99200e1f81123f911d5e581994dddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;savefile, CPU &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>savefile</declname>
        </param>
        <param>
          <type><ref refid="class_c_p_u" kindref="compound">CPU</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>overloaded enum for socket </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" line="48" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp" bodystart="48" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="processor_8h" kindref="compound">processor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="products_8h" kindref="compound">products.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">std::string<sp/><ref refid="class_c_p_u_1a76b924aa80f3acf2bfdd7299f2be6044" kindref="member">CPU::serializeObj</ref>(){</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sStream;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>sStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;<ref refid="class_product_1a749f163f9319f2cf6e9e0620d7133f0b" kindref="member">Product::serializeObj</ref>();<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>sStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\tCPU_SPECIF\n\t{\n\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGenName:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1acf0ec240e61c72c6252a2f8e7b339189" kindref="member">genName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;tdp:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" kindref="member">tdp</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;SocketType:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a1f1bb470721f49e48139e46bbea9f109" kindref="member">socketType</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;base:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a5b9fd4e0c27dcff1bcb33fbca6da2a6c" kindref="member">baseClock</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;;core:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1ab0af78c0a115e6c8659b43332439f36e" kindref="member">coreCount</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;threads:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a19e584d567f61b968f2f5e09c86abc4c" kindref="member">threadCount</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;cache:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a4ad29b59532a1c456a1aec62437aa5cd" kindref="member">L2_cache</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;ivga:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a3de211accd8ac7dc87cfecb446c4ebf9" kindref="member">iVGA</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;\n\t}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sStream.str();</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU::CPU</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tdp,<sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clock,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vga)<sp/>:<ref refid="class_product" kindref="compound">Product</ref>(),<sp/>genName(name),<sp/>tdp(tdp),</highlight></codeline>
<codeline lineno="16"><highlight class="normal">socketType(type),<sp/>baseClock(clock),<sp/>coreCount(core),<sp/>threadCount(thread),<sp/>L2_cache(c),<sp/>iVGA(vga)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="products_8h_1a6f54b54b1983a312948d8ead9f19b9afa2b55387dd066c5bac646ac61543d152d" kindref="member">obj_t::CPU</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU::CPU</ref>(std::string<sp/>pName,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>price,<sp/>std::string<sp/>manuf,<sp/>std::string<sp/>descript,<sp/>std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tdp,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clock,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vga)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<ref refid="class_product" kindref="compound">Product</ref>(pName,<sp/>price,<sp/>manuf,<sp/>descript),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>genName(name),<sp/>tdp(tdp),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>socketType(type),<sp/>baseClock(clock),<sp/>coreCount(core),<sp/>threadCount(thread),<sp/>L2_cache(c),<sp/>iVGA(vga)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="products_8h_1a6f54b54b1983a312948d8ead9f19b9afa2b55387dd066c5bac646ac61543d152d" kindref="member">obj_t::CPU</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU::CPU</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>c):<ref refid="class_product" kindref="compound">Product</ref>(c),<sp/>genName(c.genName),<sp/>tdp(c.tdp),<sp/>socketType(c.socketType),<sp/>baseClock(c.baseClock),</highlight></codeline>
<codeline lineno="27"><highlight class="normal">coreCount(c.coreCount),<sp/>threadCount(c.threadCount),<sp/>L2_cache(c.L2_cache),<sp/>iVGA(c.iVGA)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="products_8h_1a6f54b54b1983a312948d8ead9f19b9afa2b55387dd066c5bac646ac61543d152d" kindref="member">obj_t::CPU</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::string<sp/><ref refid="class_c_p_u_1a82acaa1b7d2da4e29f374d5166d42aef" kindref="member">CPU::getGenName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1acf0ec240e61c72c6252a2f8e7b339189" kindref="member">genName</ref>;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a2c07fd65f7d19ee89ccfbde0e8b4878d" kindref="member">CPU::getTDP</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a65f32aa0ee6335f15d7a7087da2564f3" kindref="member">tdp</ref>;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/><ref refid="class_c_p_u_1a70b831ad7cfe74ce44be5d1349620e87" kindref="member">CPU::getSocketType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a1f1bb470721f49e48139e46bbea9f109" kindref="member">socketType</ref>;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a4040061f11be42ead23ccca8defd734e" kindref="member">CPU::getBaseClock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a5b9fd4e0c27dcff1bcb33fbca6da2a6c" kindref="member">baseClock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a30b19e25587f96ef54b34334dc038e27" kindref="member">CPU::getCoreCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1ab0af78c0a115e6c8659b43332439f36e" kindref="member">coreCount</ref>;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a6d5058f1c0d00256a861dff8ba9b38fe" kindref="member">CPU::getThreadCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a19e584d567f61b968f2f5e09c86abc4c" kindref="member">threadCount</ref>;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a2ec3047e90d5989e03337d809988b15a" kindref="member">CPU::getCacheSize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a4ad29b59532a1c456a1aec62437aa5cd" kindref="member">L2_cache</ref>;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1aa025e57bb42da447da66c8bc8e5d5de2" kindref="member">CPU::ivga</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a3de211accd8ac7dc87cfecb446c4ebf9" kindref="member">iVGA</ref>;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="processor_8cpp_1a7b671311d36faa1acd74987a04b16f1f" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>is,<sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref>&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>i;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref>(i);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//Reads<sp/>the<sp/>object<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="processor_8cpp_1a7b671311d36faa1acd74987a04b16f1f" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>savefile,<sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!savefile.is_open())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile.open(</highlight><highlight class="stringliteral">&quot;savefile.txt&quot;</highlight><highlight class="normal">,<sp/>std::ios_base::app);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>(<ref refid="class_product" kindref="compound">Product</ref>&amp;)rhs;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CPU<sp/>specif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>genName;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tdp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68" kindref="member">socket</ref><sp/>socketType;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseClock;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coreCount;<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadCount;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>L2_cache;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>iVGA<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>temp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>genName,</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>tdp;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>socketType;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>baseClock;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>coreCount;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>threadCount;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>L2_cache;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(savefile,<sp/>temp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile<sp/>&gt;&gt;<sp/>iVGA;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile.close();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>(rhs.<ref refid="class_product_1a9cbd896ca6b2d95088be8ad8c3b11e3b" kindref="member">getName</ref>(),rhs.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>(),rhs.<ref refid="class_product_1a2f5aeb9d25fcbbcf0f6125351850d4ff" kindref="member">getManufacturer</ref>(),rhs.<ref refid="class_product_1a874a2ad2556c8d82500cce9917d5ed8c" kindref="member">getDescription</ref>(),genName,<sp/>tdp,<sp/>socketType,<sp/>baseClock,<sp/>coreCount,<sp/>threadCount,<sp/>L2_cache,<sp/>iVGA);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>savefile;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//Prints<sp/>the<sp/>basic<sp/>properties<sp/>of<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1aa2af36b3447c4e7b4e1f25f699a06824" kindref="member">CPU::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="class_c_p_u_1a76b924aa80f3acf2bfdd7299f2be6044" kindref="member">serializeObj</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">std::string<sp/><ref refid="class_c_p_u_1ad492c4bcbc0fe07eb7bd644be677c87f" kindref="member">CPU::getStringSocket</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;socketType)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a89f9926b61ea482e780698f79c10fb2a" kindref="member">AMD_AM4</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;AMD<sp/>AM4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68aa619b515b905fe4d497c26de1acb1c3f" kindref="member">INTEL_1151</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;INTEL<sp/>1151&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a8ad6b82fecc4b442e1cc1995d57f8f51" kindref="member">INTEL_1151V2</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;INTEL<sp/>1151v2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="processor_8h_1a84edc84c8145e7997b70f9919ce44d68a10c3bad51f295015492a8d1cc1380674" kindref="member">INTEL_1200</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;INTEL<sp/>1200&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>socket&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="class_c_p_u" kindref="compound">CPU</ref>*<sp/><ref refid="class_c_p_u_1ab4f1ec2a356344187dc6598404012df9" kindref="member">CPU::clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_p_u_1a2fdd8153d0979ccad9ed8452897267f4" kindref="member">CPU</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/processor.cpp"/>
  </compounddef>
</doxygen>
