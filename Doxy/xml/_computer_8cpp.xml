<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_computer_8cpp" kind="file" language="C++">
    <compoundname>Computer.cpp</compoundname>
    <includes refid="_computer_8h" local="yes">Computer.h</includes>
    <includes refid="memtrace_8h" local="yes">memtrace.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp</label>
        <link refid="_computer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Memory.h</label>
        <link refid="_memory_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="8">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>processor.h</label>
        <link refid="processor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Motherboard.h</label>
        <link refid="_motherboard_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Videocard.h</label>
        <link refid="_videocard_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>Computer.h</label>
        <link refid="_computer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>products.h</label>
        <link refid="products_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_computer_8cpp_1a094baadcaabe5a03730bcc6b4d4dc424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream &amp;</type>
        <definition>std::ifstream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::ifstream &amp;fs, PC &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="class_p_c" kindref="compound">PC</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp" line="70" column="15" bodyfile="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp" bodystart="70" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_computer_8h" kindref="compound">Computer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="class_p_c_1a213092addb3a1d89b761f780a055f0a3" kindref="member">PC::PC</ref>(){}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="class_p_c_1a213092addb3a1d89b761f780a055f0a3" kindref="member">PC::PC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_c" kindref="compound">PC</ref>&amp;<sp/>pc)<sp/>:<ref refid="class_product" kindref="compound">Product</ref>(pc)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;board<sp/>=<sp/>pc.<ref refid="class_p_c_1a1af1f6ded64f3db1242ed1f472521466" kindref="member">board</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cpu<sp/>=<sp/>pc.<ref refid="class_p_c_1aea5e38e403dd8ab8886f5fe3635848c0" kindref="member">cpu</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;gpu<sp/>=<sp/>pc.<ref refid="class_p_c_1a6494081edf14e9c83ee0efa460e5e291" kindref="member">gpu</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pcCase<sp/>=<sp/>pc.<ref refid="class_p_c_1a69788ef661daba11ea736264beaa5990" kindref="member">pcCase</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pcStorage<sp/>=<sp/>pc.<ref refid="class_p_c_1a416bf67d1a321773a55c2c0acd4c761a" kindref="member">pcStorage</ref>-&gt;<ref refid="class_storage_1af7f626e3a0bc9d46c59ef7dd8f57c6c9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;psu<sp/>=<sp/>pc.<ref refid="class_p_c_1ade767f098d19e2eb30abef9fc1f7e6c4" kindref="member">psu</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ramslots<sp/>=<sp/>pc.<ref refid="class_p_c_1a805a5aa4387f0c4144c128944a80681e" kindref="member">ramslots</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;increaseStock(1);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="class_p_c_1a213092addb3a1d89b761f780a055f0a3" kindref="member">PC::PC</ref>(<ref refid="class_g_p_u" kindref="compound">GPU</ref>&amp;<sp/>gpu,<sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>cpu,<sp/><ref refid="class_motherboard" kindref="compound">Motherboard</ref>&amp;<sp/>mb,<sp/><ref refid="class_product" kindref="compound">Product</ref>&amp;<sp/>pcCase,<sp/><ref refid="class_product" kindref="compound">Product</ref>&amp;<sp/>psu,<sp/><ref refid="class_storage" kindref="compound">Storage</ref>*<sp/>s,<sp/><ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>ram)<sp/>:gpu(gpu),<sp/>cpu(cpu),<sp/>board(mb),<sp/>pcCase(pcCase),<sp/>psu(psu),<sp/>ramslots(ram)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStorage<sp/>=<sp/>s-&gt;<ref refid="class_storage_1af7f626e3a0bc9d46c59ef7dd8f57c6c9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>price<sp/>=<sp/>gpu.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>()<sp/>+<sp/>cpu.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>()<sp/>+<sp/>mb.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>()<sp/>+<sp/>pcCase.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>()<sp/>+<sp/>psu.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>()<sp/>+<sp/>pcStorage-&gt;getPrice()<sp/>+<sp/>ram.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setPrice(price);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pre-built<sp/>PC:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gpu.<ref refid="class_product_1a9cbd896ca6b2d95088be8ad8c3b11e3b" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cpu.<ref refid="class_product_1a9cbd896ca6b2d95088be8ad8c3b11e3b" kindref="member">getName</ref>()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>ram.<ref refid="class_storage_1acdb19059f3115eceb8cb420b18658440" kindref="member">getCapacity</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>GB<sp/>RAM&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setName(ss.str());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;increaseStock(1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_p_c" kindref="compound">PC</ref>*<sp/><ref refid="class_p_c_1aa4f5779cf5f9a4ec7806da64a09b8cb3" kindref="member">PC::clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_c" kindref="compound">PC</ref>*<sp/>newpc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a213092addb3a1d89b761f780a055f0a3" kindref="member">PC</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newpc;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">std::string<sp/><ref refid="class_p_c_1a35db2210308424b6c94515036a11235b" kindref="member">PC::serializeObj</ref>()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_product_1a749f163f9319f2cf6e9e0620d7133f0b" kindref="member">Product::serializeObj</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a6494081edf14e9c83ee0efa460e5e291" kindref="member">gpu</ref>.<ref refid="class_g_p_u_1a9c68f0e1fb0b97fc7c5e91a7bf881c7b" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_c_1aea5e38e403dd8ab8886f5fe3635848c0" kindref="member">cpu</ref>.<ref refid="class_c_p_u_1ae3a32cc02d31f2193bc53ad052fba3a6" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a1af1f6ded64f3db1242ed1f472521466" kindref="member">board</ref>.<ref refid="class_motherboard_1a5cd6459fe3e4823aeeb5d2b255d68aef" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a69788ef661daba11ea736264beaa5990" kindref="member">pcCase</ref>.<ref refid="class_product_1a749f163f9319f2cf6e9e0620d7133f0b" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_p_c_1ade767f098d19e2eb30abef9fc1f7e6c4" kindref="member">psu</ref>.<ref refid="class_product_1a749f163f9319f2cf6e9e0620d7133f0b" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a416bf67d1a321773a55c2c0acd4c761a" kindref="member">pcStorage</ref>-&gt;<ref refid="class_product_1a60e8ab009f51c39442257e96409144de" kindref="member">getObjType</ref>()<sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a416bf67d1a321773a55c2c0acd4c761a" kindref="member">pcStorage</ref>-&gt;<ref refid="class_storage_1a598d2e8f3fcd8caf5d3042ddecd4896e" kindref="member">serializeObj</ref>()<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a805a5aa4387f0c4144c128944a80681e" kindref="member">ramslots</ref>.<ref refid="class_r_a_m_1a15ab2492102ae822e8ea760f9613b543" kindref="member">serializeObj</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a32aa5111878b4f5e2410f59ebb1ae650" kindref="member">PC::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="class_p_c_1a35db2210308424b6c94515036a11235b" kindref="member">serializeObj</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="class_p_c_1a115da8404d548672d21556278fbcf3d9" kindref="member">PC::~PC</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a416bf67d1a321773a55c2c0acd4c761a" kindref="member">pcStorage</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a553f909b532d5c49d82504f6a6c5ed95" kindref="member">PC::assignCase</ref>(<ref refid="class_product" kindref="compound">Product</ref>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pcCase<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1aba2f7995dd3f5896a9c3214f6b420d57" kindref="member">PC::assignCPU</ref>(<ref refid="class_c_p_u" kindref="compound">CPU</ref>&amp;<sp/>cpu)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cpu<sp/>=<sp/><ref refid="class_p_c_1aea5e38e403dd8ab8886f5fe3635848c0" kindref="member">cpu</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1aec5fd7f3198f2f3a59145ad8d2cf6567" kindref="member">PC::assignGPU</ref>(<ref refid="class_g_p_u" kindref="compound">GPU</ref>&amp;<sp/>gpu)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;gpu<sp/>=<sp/><ref refid="class_p_c_1a6494081edf14e9c83ee0efa460e5e291" kindref="member">gpu</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a908c6dd821193af721cccc0166cc8a9e" kindref="member">PC::assignMB</ref>(<ref refid="class_motherboard" kindref="compound">Motherboard</ref>&amp;<sp/>mb)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_p_c_1a1af1f6ded64f3db1242ed1f472521466" kindref="member">board</ref><sp/>=<sp/>mb;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1a3522ab4a80973cad93767ca87805f739" kindref="member">PC::assignPSU</ref>(<ref refid="class_product" kindref="compound">Product</ref>&amp;<sp/>psu)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;psu<sp/>=<sp/><ref refid="class_p_c_1ade767f098d19e2eb30abef9fc1f7e6c4" kindref="member">psu</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1adb7459899bd3be54b2c8039af1eb7373" kindref="member">PC::assignRAM</ref>(<ref refid="class_r_a_m" kindref="compound">RAM</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_p_c_1a805a5aa4387f0c4144c128944a80681e" kindref="member">ramslots</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_c_1af825826be8a2191d67c33dc36940985e" kindref="member">PC::assignStorage</ref>(<ref refid="class_storage" kindref="compound">Storage</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_p_c_1a416bf67d1a321773a55c2c0acd4c761a" kindref="member">pcStorage</ref><sp/>=<sp/>s-&gt;<ref refid="class_storage_1af7f626e3a0bc9d46c59ef7dd8f57c6c9" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">std::ifstream&amp;<sp/><ref refid="_computer_8cpp_1a094baadcaabe5a03730bcc6b4d4dc424" kindref="member">operator&gt;&gt;</ref>(std::ifstream&amp;<sp/>fs,<sp/><ref refid="class_p_c" kindref="compound">PC</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_p_u" kindref="compound">GPU</ref><sp/>g;<sp/><ref refid="class_c_p_u" kindref="compound">CPU</ref><sp/>c;<sp/><ref refid="class_motherboard" kindref="compound">Motherboard</ref><sp/>mb;<sp/><ref refid="class_r_a_m" kindref="compound">RAM</ref><sp/>r;<sp/><ref refid="class_product" kindref="compound">Product</ref><sp/>p;<sp/><ref refid="class_product" kindref="compound">Product</ref><sp/>case1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_product" kindref="compound">Product</ref><sp/>base;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>base;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>g;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>c;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>mb;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>case1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>p;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(fs,str<sp/>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>t;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_s_d" kindref="compound">SSD</ref>*<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_s_d" kindref="compound">SSD</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>*s;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1af825826be8a2191d67c33dc36940985e" kindref="member">assignStorage</ref>(s);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_h_d_d" kindref="compound">HDD</ref>*<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d" kindref="compound">HDD</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>*s;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1af825826be8a2191d67c33dc36940985e" kindref="member">assignStorage</ref>(s);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&gt;&gt;<sp/>r;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1a553f909b532d5c49d82504f6a6c5ed95" kindref="member">assignCase</ref>(case1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1aba2f7995dd3f5896a9c3214f6b420d57" kindref="member">assignCPU</ref>(c);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1aec5fd7f3198f2f3a59145ad8d2cf6567" kindref="member">assignGPU</ref>(g);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1a908c6dd821193af721cccc0166cc8a9e" kindref="member">assignMB</ref>(mb);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1a3522ab4a80973cad93767ca87805f739" kindref="member">assignPSU</ref>(p);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_p_c_1adb7459899bd3be54b2c8039af1eb7373" kindref="member">assignRAM</ref>(r);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_product_1a8ade25d68358bd4cb5b9f7c34fc53b44" kindref="member">setPrice</ref>(base.<ref refid="class_product_1a3be25f647260d61df6063ef706261c7f" kindref="member">getPrice</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_product_1a08d9ddfb4db62491607f14ec9fba0d77" kindref="member">setDescription</ref>(base.<ref refid="class_product_1a874a2ad2556c8d82500cce9917d5ed8c" kindref="member">getDescription</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_product_1aeeafda76687dbbd8b2f086671c17461d" kindref="member">setManuf</ref>(base.<ref refid="class_product_1a2f5aeb9d25fcbbcf0f6125351850d4ff" kindref="member">getManufacturer</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="class_product_1a1f49f191dab6643d82aee0490bb96e7c" kindref="member">setName</ref>(base.<ref refid="class_product_1a9cbd896ca6b2d95088be8ad8c3b11e3b" kindref="member">getName</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta=base.<ref refid="class_product_1a9279a6d296d5b8aafa0143bda648c3da" kindref="member">getAmount</ref>()-rhs.<ref refid="class_product_1a9279a6d296d5b8aafa0143bda648c3da" kindref="member">getAmount</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>&lt;<sp/>0<sp/>?<sp/>rhs.<ref refid="class_product_1a948738c4cb8e65f1f54623001b8c3897" kindref="member">decreaseStock</ref>(delta)<sp/>:<sp/>rhs.<ref refid="class_product_1ae216152e43f64a82294c2c583396d13f" kindref="member">increaseStock</ref>(delta);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Computer.cpp"/>
  </compounddef>
</doxygen>
