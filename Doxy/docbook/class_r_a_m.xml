<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_r_a_m" xml:lang="en-US">
<title>RAM Class Reference</title>
<indexterm><primary>RAM</primary></indexterm>
<para>
<computeroutput>#include &lt;Memory.h&gt;</computeroutput>
</para>
Inheritance diagram for RAM:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_r_a_m__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for RAM:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_r_a_m__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_r_a_m_1a25289e9f70eb7de231f869a6032f179b">RAM</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_r_a_m_1a89d0c46c92bdedb13e1381c5bd238734">RAM</link> (const <link linkend="_class_r_a_m">RAM</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_class_r_a_m_1ad95ea97d0dfdec6064aae32e6ed123ca">RAM</link> (<link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> <link linkend="_class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618">type</link>, int <link linkend="_class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8">clockSpeed</link>, int <link linkend="_class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10">cl</link>, double <link linkend="_class_r_a_m_1a63f119dea231b01f176e14af27e3223f">v</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_r_a_m_1acbef676f9140f5b758aaa4634ca91492">RAM</link> (size_t c, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link> bu, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> <link linkend="_class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618">type</link>, int <link linkend="_class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8">clockSpeed</link>, int <link linkend="_class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10">cl</link>, double <link linkend="_class_r_a_m_1a63f119dea231b01f176e14af27e3223f">v</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_r_a_m_1ad178e5b4a34b27f0c41904238141d16b">RAM</link> (std::string <link linkend="_class_product_1a6f88e6ff8cb26b1cce49a41e72e4fcb8">name</link>, double <link linkend="_class_product_1abb2572df7a832a509944905603ba5e4f">price</link>, std::string descript, std::string manuf, size_t c, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link> bu, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> <link linkend="_class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618">type</link>, int <link linkend="_class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8">clockSpeed</link>, int <link linkend="_class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10">cl</link>, double <link linkend="_class_r_a_m_1a63f119dea231b01f176e14af27e3223f">v</link>)</para>
</listitem>
            <listitem><para><link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> <link linkend="_class_r_a_m_1ae6dcb0ce5ed7f072b803ed005f22e6ec">getMemType</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_class_r_a_m_1ad7b791e374a00c8462a64beead0bea95">getClockSpeed</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_class_r_a_m_1a18b3b49c6522e5ab2b3a403860211d20">getlatency</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_r_a_m_1af2b254d13a98ff26768081de811805b9">getVoltage</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_r_a_m_1acacd036409fa0e75f9d28700cbbdf47d">getObjType</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_r_a_m_1ae69fec37d54b641062ed6a2ffd88a184">serializeObj</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_r_a_m">RAM</link> * <link linkend="_class_r_a_m_1a2dbd94dada94130817a298b91023e4c9">clone</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_r_a_m_1a6e77fc59fd9957e975d7946830373e06">operator!=</link> (<link linkend="_class_r_a_m">RAM</link> &amp;rhs)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_r_a_m_1a7fc6466cc5c8038e5aed21650e146da9">operator==</link> (<link linkend="_class_r_a_m">RAM</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> <link linkend="_class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618">type</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8">clockSpeed</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10">cl</link></para>
</listitem>
            <listitem><para>double <link linkend="_class_r_a_m_1a63f119dea231b01f176e14af27e3223f">v</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_r_a_m_1a25289e9f70eb7de231f869a6032f179b"/>    <section>
    <title>RAM()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<para><computeroutput>RAM::RAM ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a89d0c46c92bdedb13e1381c5bd238734"/>    <section>
    <title>RAM()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<para><computeroutput>RAM::RAM (const <link linkend="_class_r_a_m">RAM</link> &amp; r)</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1ad95ea97d0dfdec6064aae32e6ed123ca"/>    <section>
    <title>RAM()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<para><computeroutput>RAM::RAM (<link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> type, int clockSpeed, int cl, double v)</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1acbef676f9140f5b758aaa4634ca91492"/>    <section>
    <title>RAM()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<para><computeroutput>RAM::RAM (size_t c, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link> bu, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> type, int clockSpeed, int cl, double v)</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1ad178e5b4a34b27f0c41904238141d16b"/>    <section>
    <title>RAM()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>RAM</secondary></indexterm>
<para><computeroutput>RAM::RAM (std::string name, double price, std::string descript, std::string manuf, size_t c, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link> bu, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> type, int clockSpeed, int cl, double v)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_r_a_m_1a2dbd94dada94130817a298b91023e4c9"/>    <section>
    <title>clone()</title>
<indexterm><primary>clone</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>clone</secondary></indexterm>
<para><computeroutput><link linkend="_class_r_a_m">RAM</link> * RAM::clone ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_storage_1af7f626e3a0bc9d46c59ef7dd8f57c6c9">Storage</link>.</para>
    </section><anchor xml:id="_class_r_a_m_1ad7b791e374a00c8462a64beead0bea95"/>    <section>
    <title>getClockSpeed()</title>
<indexterm><primary>getClockSpeed</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>getClockSpeed</secondary></indexterm>
<para><computeroutput>int RAM::getClockSpeed ( )</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a18b3b49c6522e5ab2b3a403860211d20"/>    <section>
    <title>getlatency()</title>
<indexterm><primary>getlatency</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>getlatency</secondary></indexterm>
<para><computeroutput>int RAM::getlatency ( )</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1ae6dcb0ce5ed7f072b803ed005f22e6ec"/>    <section>
    <title>getMemType()</title>
<indexterm><primary>getMemType</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>getMemType</secondary></indexterm>
<para><computeroutput><link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> RAM::getMemType ( )</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1acacd036409fa0e75f9d28700cbbdf47d"/>    <section>
    <title>getObjType()</title>
<indexterm><primary>getObjType</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>getObjType</secondary></indexterm>
<para><computeroutput>std::string RAM::getObjType ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_storage_1a9c6d68e682a8c329dc0611ce7266f2bc">Storage</link>.</para>
    </section><anchor xml:id="_class_r_a_m_1af2b254d13a98ff26768081de811805b9"/>    <section>
    <title>getVoltage()</title>
<indexterm><primary>getVoltage</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>getVoltage</secondary></indexterm>
<para><computeroutput>double RAM::getVoltage ( )</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a6e77fc59fd9957e975d7946830373e06"/>    <section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool RAM::operator!= (<link linkend="_class_r_a_m">RAM</link> &amp; rhs)</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a7fc6466cc5c8038e5aed21650e146da9"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool RAM::operator== (<link linkend="_class_r_a_m">RAM</link> &amp; rhs)</computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1ae69fec37d54b641062ed6a2ffd88a184"/>    <section>
    <title>serializeObj()</title>
<indexterm><primary>serializeObj</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>serializeObj</secondary></indexterm>
<para><computeroutput>std::string RAM::serializeObj ( )</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_r_a_m_1ac703baaed79a25ed1467f55d3a24ae10"/>    <section>
    <title>cl</title>
<indexterm><primary>cl</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>cl</secondary></indexterm>
<para><computeroutput>int RAM::cl<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a06c470d0b80cded09950fa3be4788dc8"/>    <section>
    <title>clockSpeed</title>
<indexterm><primary>clockSpeed</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>clockSpeed</secondary></indexterm>
<para><computeroutput>int RAM::clockSpeed<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1af6a1d40b000e6f7b61fd596c0ecb8618"/>    <section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>type</secondary></indexterm>
<para><computeroutput><link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> RAM::type<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_r_a_m_1a63f119dea231b01f176e14af27e3223f"/>    <section>
    <title>v</title>
<indexterm><primary>v</primary><secondary>RAM</secondary></indexterm>
<indexterm><primary>RAM</primary><secondary>v</secondary></indexterm>
<para><computeroutput>double RAM::v<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/<link linkend="__memory_8h">Memory.h</link>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/<link linkend="__memory_8cpp">Memory.cpp</link></section>
</section>
