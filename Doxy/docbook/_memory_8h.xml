<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__memory_8h" xml:lang="en-US">
<title>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h File Reference</title>
<indexterm><primary>C:/Users/szasz/Desktop/Egyetem/Prog2/HF/NHF/NHF/NHF/Memory.h</primary></indexterm>
<programlisting>#include &quot;products.h&quot;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &quot;memtrace.h&quot;
</programlisting>Include dependency graph for Memory.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_memory_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_memory_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_storage">Storage</link></para>

<para>Base class for data storage/memory </para>
</listitem>
            <listitem><para>class <link linkend="_class_r_a_m">RAM</link></para>

<para>Class for modelling Random Access Memory Inheriting from storage </para>
</listitem>
            <listitem><para>class <link linkend="_class_h_d_d">HDD</link></para>

<para>Class for modelling Hard Drive Disks. Inheriting from <link linkend="_class_storage">Storage</link> </para>
</listitem>
            <listitem><para>class <link linkend="_class_s_s_d">SSD</link></para>

<para>Class for modelling SSDs Inheriting directly from <link linkend="_class_storage">Storage</link> class </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link> { 
<link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a78385304170d4b6010ca2148a3bd1d8f">bit</link>
, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85aac8d937b2a0f498686fab54c32371bc6">byte</link>
, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a148b886ddf947ee4ba7f55255c1d13dc">kilobyte</link>
, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a4f77e907dbf1167b4b4aec22560f8004">megabyte</link>
, 
<link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365">gigabyte</link>
, <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a2de85dd4694e7b66be249fb2215e9174">terabyte</link>
 }</para>

<para>Enumerator for multiples of byte </para>
</listitem>
            <listitem><para>enum <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link> { 
<link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01af5ba4f87a7fc21200aea1f42dd3eb3b4">DDR</link>
, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01aa347f76e7f79be0c69e5dac56fd3693e">DDR2</link>
, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a9ec4e4d3a3cfab8cb937eac76ff0a342">DDR3</link>
, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01ab11070487ce800d77428c98203b5de5f">DDR4</link>
, 
<link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a669b7d0a3da877b30757f72000daf96c">DDR5</link>
, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a4f33648364f484c1b99e23b96ffe0135">SO_DIMM</link>
, <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a27d317a975fcfe8eb232d69e8c88c554">SO_DIMM2</link>
 }</para>

<para>Enumerator for <link linkend="_class_r_a_m">RAM</link> types </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>std::ifstream &amp; <link linkend="__memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37">operator&gt;&gt;</link> (std::ifstream &amp;savefile, <link linkend="_class_storage">Storage</link> &amp;rhs)</para>
</listitem>
            <listitem><para>std::ifstream &amp; <link linkend="__memory_8h_1a5d3c36cdedfc649838c7542f2d8d8b81">operator&gt;&gt;</link> (std::ifstream &amp;savefile, <link linkend="_class_r_a_m">RAM</link> &amp;rhs)</para>
</listitem>
            <listitem><para>std::ifstream &amp; <link linkend="__memory_8h_1a3bcab9104df1767d74204644ebd078bf">operator&gt;&gt;</link> (std::ifstream &amp;savefile, <link linkend="_class_h_d_d">HDD</link> &amp;rhs)</para>
</listitem>
            <listitem><para>std::ifstream &amp; <link linkend="__memory_8h_1a97ebca926dc01a99103e15b705c29db2">operator&gt;&gt;</link> (std::ifstream &amp;savefile, <link linkend="_class_s_s_d">SSD</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85"/>    <section>
    <title>ByteUnit</title>
<indexterm><primary>ByteUnit</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>ByteUnit</secondary></indexterm>
<para><computeroutput>enum <link linkend="__memory_8h_1a284499ae529838dbabf4c7a520e99a85">ByteUnit</link></computeroutput></para><para>

<para>Enumerator for multiples of byte </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>bit</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>bit</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a78385304170d4b6010ca2148a3bd1d8f"/>bit</entry><entry></entry></row><row><entry><indexterm><primary>byte</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>byte</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85aac8d937b2a0f498686fab54c32371bc6"/>byte</entry><entry></entry></row><row><entry><indexterm><primary>kilobyte</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>kilobyte</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a148b886ddf947ee4ba7f55255c1d13dc"/>kilobyte</entry><entry></entry></row><row><entry><indexterm><primary>megabyte</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>megabyte</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a4f77e907dbf1167b4b4aec22560f8004"/>megabyte</entry><entry></entry></row><row><entry><indexterm><primary>gigabyte</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>gigabyte</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85af9deabc33a5630ffb405bb42d7cff365"/>gigabyte</entry><entry></entry></row><row><entry><indexterm><primary>terabyte</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>terabyte</secondary></indexterm>
<anchor xml:id="__memory_8h_1a284499ae529838dbabf4c7a520e99a85a2de85dd4694e7b66be249fb2215e9174"/>terabyte</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
    </section><anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01"/>    <section>
    <title>MemoryType</title>
<indexterm><primary>MemoryType</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>MemoryType</secondary></indexterm>
<para><computeroutput>enum <link linkend="__memory_8h_1a462bfa9dfea81692463ecb192183dd01">MemoryType</link></computeroutput></para><para>

<para>Enumerator for <link linkend="_class_r_a_m">RAM</link> types </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>DDR</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>DDR</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01af5ba4f87a7fc21200aea1f42dd3eb3b4"/>DDR</entry><entry></entry></row><row><entry><indexterm><primary>DDR2</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>DDR2</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01aa347f76e7f79be0c69e5dac56fd3693e"/>DDR2</entry><entry></entry></row><row><entry><indexterm><primary>DDR3</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>DDR3</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a9ec4e4d3a3cfab8cb937eac76ff0a342"/>DDR3</entry><entry></entry></row><row><entry><indexterm><primary>DDR4</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>DDR4</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01ab11070487ce800d77428c98203b5de5f"/>DDR4</entry><entry></entry></row><row><entry><indexterm><primary>DDR5</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>DDR5</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a669b7d0a3da877b30757f72000daf96c"/>DDR5</entry><entry></entry></row><row><entry><indexterm><primary>SO_DIMM</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>SO_DIMM</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a4f33648364f484c1b99e23b96ffe0135"/>SO_DIMM</entry><entry></entry></row><row><entry><indexterm><primary>SO_DIMM2</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>SO_DIMM2</secondary></indexterm>
<anchor xml:id="__memory_8h_1a462bfa9dfea81692463ecb192183dd01a27d317a975fcfe8eb232d69e8c88c554"/>SO_DIMM2</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__memory_8h_1a3bcab9104df1767d74204644ebd078bf"/>    <section>
    <title>operator&gt;&gt;()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>std::ifstream&amp; operator&gt;&gt; (std::ifstream &amp; savefile, <link linkend="_class_h_d_d">HDD</link> &amp; rhs)</computeroutput></para>    </section><anchor xml:id="__memory_8h_1a5d3c36cdedfc649838c7542f2d8d8b81"/>    <section>
    <title>operator&gt;&gt;()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>std::ifstream&amp; operator&gt;&gt; (std::ifstream &amp; savefile, <link linkend="_class_r_a_m">RAM</link> &amp; rhs)</computeroutput></para>    </section><anchor xml:id="__memory_8h_1a97ebca926dc01a99103e15b705c29db2"/>    <section>
    <title>operator&gt;&gt;()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>std::ifstream&amp; operator&gt;&gt; (std::ifstream &amp; savefile, <link linkend="_class_s_s_d">SSD</link> &amp; rhs)</computeroutput></para>    </section><anchor xml:id="__memory_8h_1a881da9e9da5a51fd6333a8e6dbcefe37"/>    <section>
    <title>operator&gt;&gt;()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Memory.h</secondary></indexterm>
<indexterm><primary>Memory.h</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>std::ifstream&amp; operator&gt;&gt; (std::ifstream &amp; savefile, <link linkend="_class_storage">Storage</link> &amp; rhs)</computeroutput></para></section>
</section>
</section>
